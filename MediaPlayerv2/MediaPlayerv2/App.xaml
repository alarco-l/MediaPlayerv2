<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MediaPlayerv2.App"
             xmlns:vm="clr-namespace:MediaPlayerv2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         
    	<Style x:Key="FocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    	<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    	<Style TargetType="{x:Type Button}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" OpacityMask="{x:Null}" BorderBrush="#00FF0000">
    						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
    							<ContentPresenter.OpacityMask>
    								<ImageBrush/>
    							</ContentPresenter.OpacityMask>
    						</ContentPresenter>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsDefaulted" Value="true">
    							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="border" Value="#28b6ff"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#28b6ff"/>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="true">
    							<Setter Property="Background" TargetName="border" Value="#0088cd"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#0088cd"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="border" Value="#0088cd"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#0088cd"/>
    							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <Style TargetType="{x:Type vm:myButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type vm:myButton}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" OpacityMask="{x:Null}" BorderBrush="#00FF0000">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.OpacityMask>
                                    <ImageBrush/>
                                </ContentPresenter.OpacityMask>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#28b6ff"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#28b6ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0088cd"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#0088cd"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#0088cd"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#0088cd"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
    	<SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
    	<SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
    	<SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
    	<SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
    	<SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
    	<SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
    	<SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
    	<SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
    	<ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
    	<SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
    	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type RepeatButton}">
    					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
    		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    			<Grid>
    				<Grid.RowDefinitions>
    					<RowDefinition Height="Auto"/>
    					<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
    					<RowDefinition Height="Auto"/>
    				</Grid.RowDefinitions>
    				<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
    				<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
    				<Border x:Name="TrackBackground" BorderBrush="#FF1BA6ED" BorderThickness="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center" Background="White">
    					<Canvas Margin="-6,-1">
    						<Rectangle x:Name="PART_SelectionRange" Fill="#FF2374C5" Height="4.0" Visibility="Hidden"/>
    					</Canvas>
    				</Border>
    				<Track x:Name="PART_Track" Grid.Row="1">
    					<Track.DecreaseRepeatButton>
    						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
    					</Track.DecreaseRepeatButton>
    					<Track.IncreaseRepeatButton>
    						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
    					</Track.IncreaseRepeatButton>
    					<Track.Thumb>
    						<Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{DynamicResource ThumbControlTemplate1}" VerticalAlignment="Center" Width="18" Foreground="{x:Null}"/>
    					</Track.Thumb>
    				</Track>
    			</Grid>
    		</Border>
    		<ControlTemplate.Triggers>
    			<Trigger Property="TickPlacement" Value="TopLeft">
    				<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
    				<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
    			</Trigger>
    			<Trigger Property="TickPlacement" Value="BottomRight">
    				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
    				<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
    			</Trigger>
    			<Trigger Property="TickPlacement" Value="Both">
    				<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    			</Trigger>
    			<Trigger Property="IsSelectionRangeEnabled" Value="true">
    				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    			</Trigger>
    			<Trigger Property="IsKeyboardFocused" Value="true">
    				<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
    		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    			<Grid>
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition Width="Auto"/>
    					<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
    					<ColumnDefinition Width="Auto"/>
    				</Grid.ColumnDefinitions>
    				<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
    				<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
    				<Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
    					<Canvas Margin="-1,-6">
    						<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
    					</Canvas>
    				</Border>
    				<Track x:Name="PART_Track" Grid.Column="1">
    					<Track.DecreaseRepeatButton>
    						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
    					</Track.DecreaseRepeatButton>
    					<Track.IncreaseRepeatButton>
    						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
    					</Track.IncreaseRepeatButton>
    					<Track.Thumb>
    						<Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
    					</Track.Thumb>
    				</Track>
    			</Grid>
    		</Border>
    		<ControlTemplate.Triggers>
    			<Trigger Property="TickPlacement" Value="TopLeft">
    				<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
    				<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
    			</Trigger>
    			<Trigger Property="TickPlacement" Value="BottomRight">
    				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
    				<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
    			</Trigger>
    			<Trigger Property="TickPlacement" Value="Both">
    				<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    			</Trigger>
    			<Trigger Property="IsSelectionRangeEnabled" Value="true">
    				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    			</Trigger>
    			<Trigger Property="IsKeyboardFocused" Value="true">
    				<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<Style TargetType="{x:Type Slider}">
    		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="BorderBrush" Value="Transparent"/>
    		<Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
    		<Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
    		<Style.Triggers>
    			<Trigger Property="Orientation" Value="Vertical">
    				<Setter Property="Template" Value="{StaticResource SliderVertical}"/>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<ControlTemplate x:Key="ThumbControlTemplate1" TargetType="{x:Type Thumb}">
    		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
    			<Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FF012563" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18">
    				<Path.OpacityMask>
    					<ImageBrush ImageSource="slid.png"/>
    				</Path.OpacityMask>
    				<Path.Fill>
    					<ImageBrush ImageSource="slid.png"/>
    				</Path.Fill>
    				<Path.RenderTransform>
    					<TransformGroup>
    						<ScaleTransform ScaleY="-1" ScaleX="-1"/>
    						<SkewTransform AngleY="0" AngleX="0"/>
    						<RotateTransform Angle="0"/>
    						<TranslateTransform/>
    					</TransformGroup>
    				</Path.RenderTransform>
    			</Path>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="#FF00439d"/>
    				<Setter Property="Stroke" TargetName="grip" Value="#FF012563"/>
    			</Trigger>
    			<Trigger Property="IsDragging" Value="true">
    				<Setter Property="Fill" TargetName="grip" Value="#FF00439d"/>
    				<Setter Property="Stroke" TargetName="grip" Value="#FF012563"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
    				<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
    	<SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    	<SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    	<Style TargetType="{x:Type ProgressBar}">
    		<Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
    		<Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ProgressBar}">
    					<Grid x:Name="TemplateRoot">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Determinate"/>
    								<VisualState x:Name="Indeterminate">
    									<Storyboard RepeatBehavior="Forever">
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
    											<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
    											<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
    										</DoubleAnimationUsingKeyFrames>
    										<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
    											<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
    											<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
    											<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
    										</PointAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
    						<Rectangle x:Name="PART_Track" Margin="0"/>
    						<Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
    							<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
    							<Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
    								<Rectangle.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</Rectangle.RenderTransform>
    							</Rectangle>
    						</Grid>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="Orientation" Value="Vertical">
    							<Setter Property="LayoutTransform" TargetName="TemplateRoot">
    								<Setter.Value>
    									<RotateTransform Angle="-90"/>
    								</Setter.Value>
    							</Setter>
    						</Trigger>
    						<Trigger Property="IsIndeterminate" Value="true">
    							<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
         
    </Application.Resources>
</Application>
